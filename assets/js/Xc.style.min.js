document.addEventListener("DOMContentLoaded", () => {
  Xc_mode();
  Dynamic_background();
  Search_Box_pop_up();
  Global_drop_down_box();
  Countdown_to_life();
  Dog_Licking_Diary();
  Switch_labels();
  Wap_Sidebar();
  Wap_Search_Box();
  Search_Box_Close();
  Wap_Search_Box_Close();
  Website_time();
  Me_motto();
  header_scrolling();
  Smooth_down();
  Message_card();
  Xc_post_Rotation_swiper();
  Xc_scroll();
});

function Xc_mode() {
  const setNightMode = (isNight) => {
    $(".Xc_action_item.mode .icon-1").toggleClass("active", isNight);
    $(".Xc_action_item.mode .icon-2").toggleClass("active", !isNight);
    if (isNight) {
      $("html").attr("data-night", "night");
      localStorage.setItem("data-night", "night");
      $.getScript(window.Xc.THEME_URL + "assets/js/Xc.bjxg.js");
    } else {
      $("html").removeAttr("data-night");
      localStorage.removeItem("data-night");
    }
  };

  setNightMode(!!localStorage.getItem("data-night"));

  $(".Xc_action_item.mode").off("click").on("click", () => {
    const isNight = !localStorage.getItem("data-night");
    setNightMode(isNight);
  });
}

function Dynamic_background() {
  if (!Xc.IS_MOBILE && Xc.DYNAMIC_BACKGROUND && Xc.DYNAMIC_BACKGROUND !== "off" && !Xc.WALLPAPER_BACKGROUND_PC) {
    $.getScript(window.Xc.THEME_URL + "assets/backdrop/" + Xc.DYNAMIC_BACKGROUND);
  }
}

function Search_Box_pop_up() {
  const $input = $(".header_internal-search .input");
  const $result = $(".header_internal-search .result");
  $input.on("click", (e) => {
    e.stopPropagation();
    $result.addClass("active");
  });
  $(document).on("click", function () {
    $result.removeClass("active");
  });
}

function Global_drop_down_box() {
  $(".Xc_assort").each(function () {
    const $this = $(this);
    const menu = $this.find(".Xc_assort_si");
    const trigger = $this.attr("trigger") || "click";
    const placement = $this.attr("placement") || $this.height() || 60;
    menu.css("top", placement);
    if (trigger === "hover") {
      $this.hover(
        () => $this.addClass("active"),
        () => $this.removeClass("active")
      );
    } else {
      $this.on("click", function (e) {
        $this.toggleClass("active");
        $(document).one("click", () => $this.removeClass("active"));
        e.stopPropagation();
      });
      menu.on("click", (e) => e.stopPropagation());
    }
  });
}

function Countdown_to_life() {
  if ($(".Xc_aside_item.timelife").length) {
    const now = new Date();
    const year = now.getFullYear();
    const month = now.getMonth() + 1;
    const date = now.getDate();
    const weekDay = now.getDay() === 0 ? 7 : now.getDay();
    const todayStart = new Date(now.toLocaleDateString()).getTime();
    const nowTime = now.getTime();
    const todayPassHours = (nowTime - todayStart) / 1000 / 60 / 60;
    const todayPassHoursPercent = (todayPassHours / 24) * 100;
    const weekDayPassPercent = (weekDay / 7) * 100;
    const monthAll = new Date(year, month, 0).getDate();
    const monthPassPercent = (date / monthAll) * 100;
    const yearPassPercent = (month / 12) * 100;
    const timelife = [
      { title: "今日已经过去", endTitle: "小时", num: Math.floor(todayPassHours), percent: Math.floor(todayPassHoursPercent) + "%" },
      { title: "这周已经过去", endTitle: "天", num: weekDay, percent: Math.floor(weekDayPassPercent) + "%" },
      { title: "本月已经过去", endTitle: "天", num: date, percent: Math.floor(monthPassPercent) + "%" },
      { title: "今年已经过去", endTitle: "个月", num: month, percent: Math.floor(yearPassPercent) + "%" }
    ];
    let htmlStr = "";
    timelife.forEach((item, index) => {
      htmlStr += `\n<div class="item">\n<div class="title">\n${item.title}\n<span class="text">${item.num}</span>\n${item.endTitle}\n</div>\n<div class="progress">\n<div class="progress-bar">\n<div class="progress-bar-inner progress-bar-inner-${index}" style="width: ${item.percent}"></div>\n</div>\n<div class="progress-percentage">${item.percent}</div>\n</div>\n</div>`;
    });
    $(".Xc_aside_item.timelife .Xc_aside_item-contain").html(htmlStr);
  }
}

function Dog_Licking_Diary() {
  if ($('.Xc_aside_item.flatterer').length) {
    fetch(window.Xc.THEME_URL + 'assets/json/Xc.tgapi.json')
      .then(response => response.json())
      .then(data => {
        const arr = data.message;
        function getRandomIndex(len) {
          return Math.floor(Math.random() * len);
        }
        function renderMotto() {
          const idx = getRandomIndex(arr.length);
          const content = arr[idx].replace(/\*\*(.*?)\*\*/g, '<mark>$1</mark>');
          $('.Xc_aside_item.flatterer .content')
            .html(content)
            .attr('class', 'content type' + getRandomIndex(6));
        }
        renderMotto();
        $('.Xc_aside_item.flatterer .change').off('click').on('click', renderMotto);
      });
  }
}

function Switch_labels() {
  if (Xc.DOCUMENT_TITLE) {
    const TITLE = document.title;
    document.addEventListener("visibilitychange", () => {
      if (document.visibilityState === "hidden") {
        document.title = Xc.DOCUMENT_TITLE;
      } else {
        document.title = TITLE;
      }
    });
  }
}

function Wap_Sidebar() {
  $(".header_internal-slideicon").on("click", function () {
    $(".header_search").removeClass("active");
    if ($(".header_roll").hasClass("active")) {
      $("body").css("overflow", "");
      $(".header_hyal").removeClass("active slideout");
      $(".header_roll").removeClass("active");
    } else {
      $("body").css("overflow", "overflow");
      $(".header_hyal").addClass("active slideout");
      $(".header_roll").addClass("active");
    }
  });
}

function Wap_Search_Box() {
  $(".header_internal-searchicon").on("click", function () {
    $(".header_roll").removeClass("active");
    if ($(".header_search").hasClass("active")) {
      $("body").css("overflow", "");
      $(".header_hyal").removeClass("active slideout");
      $(".header_search").removeClass("active");
    } else {
      $("body").css("overflow", "overflow");
      $(".header_hyal").addClass("active");
      $(".header_search").addClass("active");
    }
  });
}

function Search_Box_Close() {
  $(".header_hyal").on("click", function () {
    $("body").css("overflow", "");
    $(".header_hyal").removeClass("active slideout");
    $(".header_search").removeClass("active");
    $(".header_roll").removeClass("active");
  });
}

function Wap_Search_Box_Close() {
  $(".header_roll-menu .current")
    .parents(".panel-body")
    .show()
    .siblings(".panel")
    .addClass("in");
  $(".header_roll-menu .panel").on("click", function () {
    const panelBox = $(this).parent().parent();
    panelBox.find(".panel").not($(this)).removeClass("in");
    panelBox
      .find(".panel-body")
      .not($(this).siblings(".panel-body"))
      .stop()
      .hide("fast");
    $(this).toggleClass("in").siblings(".panel-body").stop().toggle("fast");
  });
}

function Website_time() {
  const getRunTime = () => {
    const birthDay = new Date(Xc.BIRTHDAY);
    const now = new Date();
    let diff = Math.floor((now - birthDay) / 1000);
    const day = String(Math.floor(diff / 86400)).padStart(2, "0");
    diff %= 86400;
    const hour = String(Math.floor(diff / 3600)).padStart(2, "0");
    diff %= 3600;
    const minute = String(Math.floor(diff / 60)).padStart(2, "0");
    const second = String(diff % 60).padStart(2, "0");
    $(".Xc_run__day").html(day);
    $(".Xc_run__hour").html(hour);
    $(".Xc_run__minute").html(minute);
    $(".Xc_run__second").html(second);
  };
  if (
    Xc.BIRTHDAY &&
    /(\d{4})\/(\d{1,2})\/(\d{1,2}) (\d{1,2})\:(\d{1,2})\:(\d{1,2})/.test(Xc.BIRTHDAY)
  ) {
    getRunTime();
    setInterval(getRunTime, 1000);
  }
}



function Me_motto() {
  let motto = Xc.MOTTO;
  if (!motto) motto = "有钱终成眷属，没钱亲眼目睹";
  if (motto.includes("http")) {
    $.ajax({
      url: motto,
      dataType: "text",
      success: (res) => $(".Xc_motto").html(res)
    });
  } else {
    $(".Xc_motto").html(motto);
  }
}

function header_scrolling() {
  if (!window.Xc.IS_MOBILE) {
    let lastScrollY = window.pageYOffset;
    let header = document.querySelector(".Xc_header");
    let asideItem = document.querySelector(".Xc_aside .Xc_aside_item:last-child");
    const headerHeight = () => $(".Xc_header").height();
    const updateHeader = () => {
      const currentY = window.pageYOffset;
      if (currentY >= headerHeight() && currentY < lastScrollY) {
        header.classList.add("active");
        if (asideItem) asideItem.style.top = (headerHeight() - 60 + 80) + "px";
      } else {
        header.classList.remove("active");
        if (asideItem) asideItem.style.top = (headerHeight() + 20) + "px";
      }
      lastScrollY = currentY;
    };
    updateHeader();
    document.addEventListener("scroll", () => {
      updateHeader();
      header.classList.toggle("Xc_slid", window.scrollY > 100);
    });
  }
}

function Smooth_down() {
  const $Xc = document.querySelector(".Xc_main");
  $("#scroll-down").on("click", function () {
    const top = $Xc.offsetTop - 60;
    window.scrollTo({
      top,
      behavior: "smooth"
    });
  });
}

function Message_card() {
  let zIndex = 100;
  const colors = [
    "#F8D800", "#0396FF", "#EA5455", "#7367F0", "#32CCBC", "#F6416C", "#28C76F", "#9F44D3", "#F55555", "#736EFE", "#E96D71", "#DE4313", "#D939CD", "#4C83FF", "#F072B6", "#C346C2", "#5961F9", "#FD6585", "#465EFB", "#FFC600", "#FA742B", "#5151E5", "#BB4E75", "#FF52E5", "#49C628", "#00EAFF", "#F067B4", "#F067B4", "#ff9a9e", "#00f2fe", "#4facfe", "#f093fb", "#6fa3ef", "#bc99c4", "#46c47c", "#f9bb3c", "#e8583d", "#f68e5f"
  ];
  const rand = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min;
  const $list = $(".Xc_reads_leaving-list");
  const width = $list.width();
  const height = $list.height();
  const borderRadiusArr1 = ["20px 300px", "20px 400px", "20px 500px", "30px 300px", "30px 400px", "30px 500px", "40px 300px", "40px 400px", "40px 500px"];
  const borderRadiusArr2 = ["300px 20px", "400px 20px", "500px 20px", "300px 30px", "400px 30px", "500px 30px", "300px 40px", "400px 40px", "500px 40px"];
  $list.find(".item").each(function () {
    const z = rand(1, 99);
    const bg = colors[rand(0, colors.length - 1)];
    const w = Math.ceil($(this).width());
    const h = Math.ceil($(this).height());
    const top = rand(0, height - h);
    const left = rand(0, width - w);
    $(this).css({
      display: "block",
      zIndex: z,
      background: bg,
      top,
      left,
      borderTopLeftRadius: borderRadiusArr2[rand(0, borderRadiusArr2.length - 1)],
      borderTopRightRadius: borderRadiusArr1[rand(0, borderRadiusArr1.length - 1)],
      borderBottomLeftRadius: borderRadiusArr1[rand(0, borderRadiusArr1.length - 1)],
      borderBottomRightRadius: borderRadiusArr1[rand(0, borderRadiusArr1.length - 1)]
    });
    $(this).on("dragStart", () => {
      zIndex++;
      $(this).css({ zIndex });
    });
  });
}

function Xc_post_Rotation_swiper() {
  new Swiper(".swiper-container", {
    loop: true,
    autoplay: {
      delay: 3000,
      stopOnLastSlide: false,
      disableOnInteraction: false
    },
    pagination: {
      el: ".swiper-pagination",
      clickable: true
    },
    navigation: {
      nextEl: ".swiper-button-next",
      prevEl: ".swiper-button-prev"
    }
  });
}

function Xc_scroll() {
  window.addEventListener("load", function () {
    const e = new URLSearchParams(location.search).get("scroll");
    if (e) {
      const o = $(".Xc_header").height();
      let t = null;
      if (
        ((t = $("#" + e).length > 0 ? $("#" + e) : $("." + e)),
        t && t.length > 0)
      ) {
        const e = t.offset().top - o - 40;
        window.scrollTo({ top: e, behavior: "smooth" });
      }
    }
  });
}

